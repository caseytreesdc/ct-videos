{"version":3,"sources":["assets/logo.png","assets/thumbnails/intro-to-ct_thumbnail.jpg","assets/thumbnails/plant-it-forward_thumbnail.png","assets/thumbnails/protection-amendment_thumbnail.png","assets/thumbnails/ycyt-2_thumbnail.jpg","assets/theater-background-2.jpg","components/CTButton.js","components/Header.js","components/Form.js","components/Hero.js","components/Thumbnail.js","components/Gallery.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CTButton","props","className","orange","green","href","url","target","text","Header","alt","src","logo","Form","state","formSource","formSrc","title","this","height","width","frameborder","allowFullScreen","React","Component","Hero","style","backgroundImage","Thumbnail","version","xmlns","points","imgSrc","Gallery","intro","plantItForward","amendment","ycyt2","Main","handleClick","bind","setState","e","formSources","preventDefault","includes","theaterBackground","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69026566.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dd451f6.png\";","module.exports = __webpack_public_path__ + \"static/media/intro-to-ct_thumbnail.d186c485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plant-it-forward_thumbnail.5f4040bf.png\";","module.exports = __webpack_public_path__ + \"static/media/protection-amendment_thumbnail.0eee1cf0.png\";","module.exports = __webpack_public_path__ + \"static/media/ycyt-2_thumbnail.a317ccf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theater-background-2.d530c8bc.jpg\";","import React from \"react\";\nimport \"./CTButton.css\";\n\nconst CTButton = (props) => {\n  let className = \"CTButton\";\n\n  if (props.orange) {\n    className += \" orange\"\n  } else if (props.green) {\n    className += \" green\"\n  }\n\n  return (\n    <a className=\"CTButton__link\" href={props.url} target=\"__blank\">\n      <div className={className}>\n        <p className=\"CTButton__text\">{props.text}</p>\n      </div>\n    </a>\n  );\n};\n\nexport default CTButton;\n","import React from \"react\";\nimport \"./Header.css\";\nimport CTButton from \"./CTButton\";\n\nimport logo from \"../assets/logo.png\";\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <a\n        className=\"Header__logo-container\"\n        href=\"https://caseytrees.org/\"\n        target=\"__blank\"\n      >\n        <img alt=\"Casey Trees' logo\" src={logo} className=\"Header__logo\"></img>\n      </a>\n      <div className=\"Header__buttons\">\n        <CTButton\n          orange\n          url=\"https://caseytrees.org/plant/\"\n          text=\"WATCH\"\n        ></CTButton>\n        <CTButton\n          green\n          url=\"https://caseytrees.org/resources/\"\n          text=\"DONATE\"\n        ></CTButton>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./Form.css\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formSource: this.props.formSrc,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Form__iframe-Container\">\n        <iframe\n          title=\"Form or Video?\"\n          src={this.props.formSrc}\n          height=\"400\"\n          width=\"600\"\n          frameborder=\"0\"\n          // scrolling=\"no\"\n          allowFullScreen\n        ></iframe>\n        <script src=\"//tfaforms.com/js/iframe_resize_helper.js\"></script>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"./Form\";\n\nimport \"./Hero.css\";\n\nconst Hero = (props) => {\n  return (\n    <div\n      style={{ backgroundImage: `url(${props.backgroundImage})` }}\n      className=\"Hero\"\n    >\n      <Form formSrc={props.formSrc}></Form>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport \"./Thumbnail.css\";\n\nconst Thumbnail = (props) => {\n  return (\n    <div className=\"Thumbnail\">\n      <svg\n        className=\"play-icon\"\n        width=\"50\"\n        height=\"50\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <polygon points=\"0,0 0,50 50,25\" />\n      </svg>\n      <img alt={props.imgSrc} className=\"Thumbnail__image\" src={props.imgSrc} />\n    </div>\n  );\n};\n\nexport default Thumbnail;\n","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\n\nimport './Gallery.css'\n\nimport intro from \"../assets/thumbnails/intro-to-ct_thumbnail.jpg\";\nimport plantItForward from \"../assets/thumbnails/plant-it-forward_thumbnail.png\";\nimport amendment from \"../assets/thumbnails/protection-amendment_thumbnail.png\";\nimport ycyt2 from \"../assets/thumbnails/ycyt-2_thumbnail.jpg\";\n\nconst Gallery = () => {\n  return (\n    <div className=\"Gallery\">\n      <Thumbnail imgSrc={intro}></Thumbnail>\n      <Thumbnail imgSrc={plantItForward}></Thumbnail>\n      <Thumbnail imgSrc={amendment}></Thumbnail>\n      <Thumbnail imgSrc={ycyt2}></Thumbnail>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport \"./Main.css\";\n\nimport Header from './Header'\nimport Hero from \"./Hero\";\nimport Gallery from \"./Gallery\";\n\nimport theaterBackground from \"../assets/theater-background-2.jpg\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formSrc: \"\",\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    this.setState({ formSrc: \"https://tfaforms.com/4821884\" });\n  }\n\n  handleClick(e) {\n    let formSources = {\n      intro: \"https://tfaforms.com/4821879\",\n      plantItForward: \"https://tfaforms.com/4821886\",\n      amendment: \"https://tfaforms.com/4821403\",\n      ycyt2: \"https://tfaforms.com/4821884\",\n    };\n\n    e.preventDefault();\n    if (e.target.alt) {\n      if (e.target.alt.includes(\"intro-to-ct\")) {\n        this.setState({ formSrc: formSources.intro });\n      } else if (e.target.alt.includes(\"plant-it-forward\")) {\n        this.setState({ formSrc: formSources.plantItForward });\n      } else if (e.target.alt.includes(\"protection-amendment\")) {\n        this.setState({ formSrc: formSources.amendment });\n      } else if (e.target.alt.includes(\"ycyt-2\")) {\n        this.setState({ formSrc: formSources.ycyt2 });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <Header></Header>\n        <Hero\n          formSrc={this.state.formSrc}\n          backgroundImage={theaterBackground}\n        ></Hero>\n        <div onClick={this.handleClick}>\n          <Gallery></Gallery>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css'\nimport Main from './components/Main'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}